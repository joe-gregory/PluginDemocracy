@inject BaseAppState AppState
@inject Services Services
@inject IDialogService DialogService
@using Microsoft.AspNetCore.Components.Forms

<MudText Typo="Typo.h3" Color="Color.Primary" Align="Align.Center" Class="mb-5">@AppState.Translate(ResourceKeys.JoinCommunity)</MudText>
<MudText Align="Align.Center">@AppState.Translate(ResourceKeys.SelectCommunityFromDropDown)</MudText>

<MudSelect Variant="Variant.Outlined" ValueChanged="@(EventCallback.Factory.Create<ResidentialCommunityDTO>(this, OnSelectCommunityDtoChanged))" Value="selectedCommunityDTO">
    @foreach (ResidentialCommunityDTO communityDtoOption in communitiesDtos)
    {
        <MudSelectItem Value="@communityDtoOption">@communityDtoOption.FullName</MudSelectItem>
    }
</MudSelect>

@if (homesDtosFromSelectedCommunity.Count > 0)
{
    <MudPaper Elevation="25" Class="mt-10 mb-10">
        <MudText Typo="Typo.h5" Align="Align.Center" Color="Color.Primary">@AppState.Translate(ResourceKeys.JoinAHome)</MudText>
        <MudText Class="ma-3">@AppState.Translate(ResourceKeys.SelectHomeDescriptionInJoinCommunity)</MudText>
        <MudTable T="HomeDTO" Items="@homesDtosFromSelectedCommunity" Hover="true">
            <HeaderContent>
                <MudTh>@AppState.Translate(ResourceKeys.Homes)</MudTh>
                <MudTh>@AppState.Translate(ResourceKeys.Residents)</MudTh>
                <MudTh>@AppState.Translate(ResourceKeys.HomeOwners)</MudTh>
                <MudTh>@AppState.Translate(ResourceKeys.Join)</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="@AppState.Translate(ResourceKeys.Homes)">@context.InternalAddress</MudTd>
                <MudTd DataLabel="@AppState.Translate(ResourceKeys.Residents)">
                    <MudAvatarGroup>
                        @foreach (UserDTO user in context.Residents)
                        {
                            if (!string.IsNullOrEmpty(user.ProfilePicture))
                            {
                                <MudAvatar><MudImage Src="@user.ProfilePicture" /></MudAvatar>
                            }
                            else
                            {
                                <MudAvatar>@user.Initials</MudAvatar>
                            }
                        }
                    </MudAvatarGroup>
                </MudTd>
                <MudTd DataLabel="@AppState.Translate(ResourceKeys.HomeOwners)">
                    @foreach (UserDTO owner in context.OwnersOwnerships.Keys)
                    {
                        if (!string.IsNullOrEmpty(owner.ProfilePicture))
                        {
                            <MudAvatar><MudImage Src="@owner.ProfilePicture" /></MudAvatar>
                        }
                        else
                        {
                            <MudAvatar>@owner.Initials</MudAvatar>
                        }
                    }
                </MudTd>
                <MudTd><MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" OnClick="() => SelectedHome(context.Id)" /></MudTd>
            </RowTemplate>
        </MudTable>
    </MudPaper>
}
<MudDialog @bind-IsVisible="isJoinHomeDialogVisible" Options="dialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">@AppState.Translate(ResourceKeys.JoinAHome)</MudText>
    </TitleContent>
    <DialogContent>
        <MudText>@AppState.Translate(ResourceKeys.AreYouJoiningAsAHomeOwnerOrResidentDialogContent)</MudText>
        <MudForm>
            <MudRadioGroup T="bool" @bind-Value="residentOrOwner">
                <MudRadio Color="Color.Primary" Class="mt-2 mb-2" Value="false">@AppState.Translate(ResourceKeys.Resident)</MudRadio>
                <MudRadio Color="Color.Primary" Class="mt-2 mb-2" Value="true">@AppState.Translate(ResourceKeys.HomeOwner)</MudRadio>
            </MudRadioGroup>
            @if (residentOrOwner == true)
            {
                <MudText>@AppState.Translate(ResourceKeys.AvailableOwnership) : @($"{selectedHomeDTO?.AvailableOwnershipPercentage}%")</MudText>
                <MudNumericField T="double" @bind-Value="selectedOwnershipPercentage" Immediate="false" Label="@AppState.Translate(ResourceKeys.Percentage)" />
                <MudText Color="Color.Error">@AppState.Translate(ResourceKeys.IfJoiningAsOwnerAdditionalDocumentsNeeded)</MudText>
                <MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="AddSupportingDocumentsToUpload">
                    <ButtonTemplate>
                        <MudButton HtmlTag="label"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   StartIcon="@Icons.Material.Filled.AttachFile"
                                   for="@context.Id">
                            @AppState.Translate(ResourceKeys.Select)
                        </MudButton>
                    </ButtonTemplate>
                </MudFileUpload>
                @*Show files ready to upload*@
                @if (files != null && files.Count > 0)
                {
                    <MudCard Elevation="25">
                        <MudText>@AppState.Translate(ResourceKeys.FilesReadyToUpload)</MudText>
                        <MudList>
                            @foreach (IBrowserFile file in files)
                            {
                                <MudListItem Icon="@Icons.Material.Filled.AttachFile">
                                    @file.Name <code>@file.Size bytes</code>
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" @onclick="() => RemoveSupportingDocumentToBeUploaded(file)" />
                                </MudListItem>
                            }
                        </MudList>
                    </MudCard>
                }
            }
        </MudForm>
        @if (displayDialogErrorMessage)
        {
            <MudText Color="Color.Error">@dialogErrorMessage</MudText>
        }
        
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" Variant="Variant.Filled" Class="mt-5 mb-5" Disabled="disableSendButton" OnClick="SendRequest">@AppState.Translate(ResourceKeys.SendRequest)</MudButton>
        @if(showSpinner)
        {
            <MudProgressCircular Color="Color.Primary" Size="Size.Small" Indeterminate="true"/>
        }
    </DialogActions>
</MudDialog>




