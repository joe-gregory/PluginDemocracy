@inject BaseAppState AppState
@inject Services Services
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudText Typo="Typo.h3" Align="Align.Center">@AppState.Translate("SignUp")</MudText>
    <MudForm Model="@userDto" @bind-IsValid="@success" @bind-Errors="@errors">
        <MudPaper Class="pa-4" Elevation="25">
            <MudSwitch T="bool" Size="Size.Large" ThumbIcon="@Icons.Material.Filled.Flag" ThumbIconColor="thumbIconColorCulture" CheckedChanged="OnCultureSwitchToggled">@AppState.Translate("PrimaryLanguageAndCulture") : @userDto.Culture.Name <img src="@selectedFlagCulture" height="14" class="mr-1" /></MudSwitch>
        <MudTextField T="string" Label="@AppState.Translate("FirstName")" Required="true" RequiredError="@AppState.Translate("Required")" @bind-Value="@userDto.FirstName" Variant="Variant.Outlined" />
        <MudTextField T="string" Label="@AppState.Translate("MiddleName")" Required="false" @bind-Value="@userDto.MiddleName" Variant="Variant.Outlined" />
        <MudTextField T="string" Label="@AppState.Translate("LastName")" Required="true" RequiredError="@AppState.Translate("Required")" @bind-Value="@userDto.LastName" Variant="Variant.Outlined" />
        <MudTextField T="string" Label="@AppState.Translate("SecondLastName")" Required="false" @bind-Value="@userDto.SecondLastName" Variant="Variant.Outlined" />
        <MudTextField T="string" Label="Email" Required="true" RequiredError="@AppState.Translate("Required")" Validation="@(new EmailAddressAttribute() {ErrorMessage = AppState.Translate("Invalid")})" @bind-Value="userDto.Email" Variant="Variant.Outlined" />
        <MudTextField T="string" Label="@AppState.Translate("Password")" @ref="pwField1" InputType="InputType.Password" Validation="@(new Func<string, IEnumerable<string>>(Services.PasswordStrength))" Required="true" RequiredError="Password is required!" @bind-Value="userDto.Password" Variant="Variant.Outlined" />
        <MudSwitch T="bool" Size="Size.Large" ThumbIcon="@Icons.Material.Filled.Flag" ThumbIconColor="thumbIconColorPhone" CheckedChanged="OnPhoneSwitchToggled" Disabled="@disabled">@AppState.Translate("CountryCode") : @countryCode <img src="@selectedFlagPhone" height="14" class="mr-1" /></MudSwitch>
        <MudTextField T="string" Label="@AppState.Translate("PhoneNumber")" Required="false" InputType="@InputType.Telephone" @bind-Value="phoneNumber" Variant="Variant.Outlined" Counter="10" MaxLength="10" HelperText="Cel" Immediate="true" Validation="@(new Func<string, IEnumerable<string>>(MaxCharacters))" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Phone" AdornmentColor="@phoneAdornmentColor" />
        <MudTextField T="DateTime?" Label="@AppState.Translate("DateOfBirth")" Format="yyyy-MM-dd" InputType="InputType.Date" Variant="Variant.Outlined" @bind-bind-Value="userDto.DateOfBirth" Required="true" RequiredError="@AppState.Translate("Required")" />
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success || disableButton)" Class="mt-5" OnClick="PostForm">@AppState.Translate("Register")</MudButton>
        </MudPaper>
    </MudForm>
    @code {
    private UserDto userDto = new UserDto()
        {
            Culture = new System.Globalization.CultureInfo("en-US"),
        };
    private bool disableButton;
    private string countryCode = "+1";
    private string selectedFlagPhone = "https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/2880px-Flag_of_the_United_States.svg.png";
    private string usaFlag = "https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/2880px-Flag_of_the_United_States.svg.png";
    private string mxnFlag = "https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Flag_of_Mexico.svg/2880px-Flag_of_Mexico.svg.png";

    private string phoneNumber = "";
    private MudBlazor.Color thumbIconColorPhone = MudBlazor.Color.Info;
    private MudBlazor.Color phoneAdornmentColor = MudBlazor.Color.Info;
    private bool disabled = false;

    private bool _checkedPhone = false;

    private MudBlazor.Color thumbIconColorCulture = MudBlazor.Color.Info;
    private bool _checkedCulture = false;
    private string selectedFlagCulture = "https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/2880px-Flag_of_the_United_States.svg.png";
    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (AppState.Culture.Name == "es-MX")
        {
            _checkedCulture = true;
            userDto.Culture = new System.Globalization.CultureInfo("es-MX");
        }
        else
        {
            _checkedCulture = false;
            userDto.Culture = new System.Globalization.CultureInfo("en-US");
        }
        SetLookCultureSwitch();
        _checkedPhone = AppState.Culture.Name == "es-MX";
        SetLookPhoneSwitch();
    }

    private IEnumerable<string> MaxCharacters(string pn)
    {
        if (!string.IsNullOrEmpty(pn) && 10 < pn?.Length) yield return "Max 10 characters";
        if (pn != null && pn.Length > 0 && !Regex.IsMatch(pn, @"^\d+$")) yield return "Phone number must contain only digits 0-9";
        if (pn != null && pn.Length > 0 && pn.Length < 10) yield return "Phone number needs at least 10 digits (xxx) xxx-xxxx";
    }

    private void SetLookPhoneSwitch()
    {
        //true == Mexican so that default (left) is American
        if (_checkedPhone)
        {
            thumbIconColorPhone = MudBlazor.Color.Success;
            phoneAdornmentColor = MudBlazor.Color.Success;
            countryCode = "+52";
            selectedFlagPhone = mxnFlag;
        }
        else
        {
            thumbIconColorPhone = MudBlazor.Color.Info;
            phoneAdornmentColor = MudBlazor.Color.Info;
            countryCode = "+1";
            selectedFlagPhone = usaFlag;
        }
    }
    private void OnPhoneSwitchToggled()
    {
        _checkedPhone = !_checkedPhone;
        SetLookPhoneSwitch();
    }

    private void SetLookCultureSwitch()
    {
        //true == Mexican
        if (_checkedCulture)
        {
            thumbIconColorCulture = MudBlazor.Color.Success;
            selectedFlagCulture = mxnFlag;
        }
        else
        {
            thumbIconColorCulture = MudBlazor.Color.Info;
            selectedFlagCulture = usaFlag;
        }
    }
    private void OnCultureSwitchToggled()
    {
        _checkedCulture = !_checkedCulture;
        if (_checkedCulture) userDto.Culture = new System.Globalization.CultureInfo("es-MX");
        else userDto.Culture = new System.Globalization.CultureInfo("en-US");
        AppState.SetCulture(userDto.Culture);
        SetLookCultureSwitch();
    }

    bool success;
    string[] errors = { };
    MudTextField<string>? pwField1;

    private async void PostForm()
    {
        disableButton = true;
        if (!string.IsNullOrEmpty(phoneNumber)) userDto.PhoneNumber = phoneNumber;
        await Services.PostDataAsync<UserDto>(ApiEndPoints.PostSignUp, userDto);
    }
}