@inject Services Services
@inject BaseAppState AppState
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Forms

<MudText Typo="Typo.h3" Color="Color.Primary" Align="Align.Center" Class="mb-5">@AppState.Translate(ResourceKeys.CreatePetition)</MudText>
<MudCard Elevation="25" Class="pa-5">
    <MudText>@AppState.Translate(ResourceKeys.CreatePetitionDescription)</MudText>
</MudCard>
@*Community*@
<MudCard Elevation="25" Class="mt-5 pa-5">
    @if (PetitionId == null)
    {
        @if (AppState?.User?.Citizenships.Count > 1)
        {
            <MudSelect @bind-Value="petitionDTO.CommunityDTO" Label="@(AppState.Translate(ResourceKeys.Community))" Required="true" Disabled="disableAll">
                @foreach (ResidentialCommunityDTO community in AppState.User.Citizenships)
                {
                    <MudSelectItem Value="@community">@community.Name</MudSelectItem>
                }
            </MudSelect>
        }
        else
        {
            <MudField Label="@AppState?.Translate(ResourceKeys.Community)" Variant="Variant.Outlined">@petitionDTO.CommunityDTO?.Name</MudField>
        }
    }
    else
    {
        @* Display the communities that all the authors share in common *@
        <MudSelect @bind-Value="petitionDTO.CommunityDTO" Label="@(AppState.Translate(ResourceKeys.Community))" Required="true" Disabled="disableAll">
            @foreach (ResidentialCommunityDTO community in petitionDTO.CommonCommunitiesBetweenAuthors)
            {
                <MudSelectItem Value="@community">@community.FullName</MudSelectItem>
            }
        </MudSelect>
    }
</MudCard>
@*Title, Description, Action Requested, Supporting Arguments, Deadline for Response*@
<MudCard Elevation="25" Class="mt-5 pa-5">
    <MudTextField @bind-Value="petitionDTO.Title" Label="@AppState.Translate(ResourceKeys.Title)" Variant="Variant.Outlined" Class="mt-5" HelperText="@AppState.Translate(ResourceKeys.PetitionTitle)" Required="true" Disabled="disableAll" />
    <MudTextField @bind-Value="petitionDTO.Description" Label="@AppState.Translate(ResourceKeys.Description)" Variant="Variant.Outlined" Class="mt-5" Lines="10" AutoGrow HelperText="@AppState.Translate(ResourceKeys.PetitionDescription)" Required="true" Disabled="disableAll" />
    <MudTextField @bind-Value="petitionDTO.ActionRequested" Label="@AppState.Translate(ResourceKeys.ActionRequested)" Variant="Variant.Outlined" Class="mt-5" Lines="10" AutoGrow HelperText="@AppState.Translate(ResourceKeys.ActionRequestedDescription)" Required="true" Disabled="disableAll" />
    <MudTextField @bind-Value="petitionDTO.SupportingArguments" Label="@AppState.Translate(ResourceKeys.SupportingArguments)" Variant="Variant.Outlined" Class="mt-5" Lines="10" AutoGrow HelperText="@AppState.Translate(ResourceKeys.SupportingArgumentsDescription)" Required="true" Disabled="disableAll" />
    <MudTextField @bind-Value="petitionDTO.DeadlineForResponse" Format="yyyy-MM-dd" Label="@AppState.Translate(ResourceKeys.DeadlineForResponse)" InputType="InputType.Date" HelperText="@AppState.Translate(ResourceKeys.DeadlineForResponseDescription)" Disabled="disableAll" />
</MudCard>
@*Supporting Documents*@
<MudCard Elevation="25" Class="mt-5 pa-5">
    <MudText Typo="Typo.h5" Class="mb-5">@AppState.Translate(ResourceKeys.SupportingDocuments)</MudText>
    <MudText Class="m-1">@AppState.Translate(ResourceKeys.SupportingDocumentsDescription)</MudText>
    <MudFileUpload T="IReadOnlyList<IBrowserFile>" FilesChanged="AddSupportingDocumentsToUpload" Disabled="disableAll">
        <ButtonTemplate>
            <MudButton HtmlTag="label"
                       Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.AttachFile"
                       for="@context.Id">
                @AppState.Translate(ResourceKeys.Select)
            </MudButton>
        </ButtonTemplate>
    </MudFileUpload>
    @*Show files ready to upload*@
    @if (files != null && files.Count > 0)
    {
        <MudCard Elevation="25">
            <MudText>@AppState.Translate(ResourceKeys.FilesReadyToUpload)</MudText>
            <MudList>
                @foreach (IBrowserFile file in files)
                {
                    <MudListItem Icon="@Icons.Material.Filled.AttachFile">
                        @file.Name <code>@file.Size bytes</code>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" @onclick="() => RemoveSupportingDocumentToBeUploaded(file)" />
                    </MudListItem>
                }
            </MudList>
        </MudCard>
    }
    @*Already uploaded documents*@
    @if (petitionDTO.LinksToSupportingDocuments != null && petitionDTO.LinksToSupportingDocuments.Count > 0)
    {
        <MudCard Elevation="25">
            <MudText>@AppState.Translate(ResourceKeys.UploadedFiles)</MudText>
            <MudList>
                @foreach (string fileLink in petitionDTO.LinksToSupportingDocuments)
                {
                    string fileName = Path.GetFileName(fileLink);
                    int index = fileName.IndexOf("?");
                    if (index >= 0)
                    {
                        fileName = fileName.Substring(0, index);
                    }
                    <MudListItem Icon="@Icons.Material.Filled.CheckCircle"><MudLink Href="@fileLink">@fileName</MudLink></MudListItem>
                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" @onclick="() => RemoveSupportingDocument(fileLink)" Disabled="disableAll" />
                }
            </MudList>
        </MudCard>
    }
</MudCard>
@*Authors*@
<MudCard Class="mt-5 pa-5">
    <MudText Typo="Typo.h5" Class="mb-5">@AppState.Translate(ResourceKeys.Authors)</MudText>
    <MudText>@AppState.Translate(ResourceKeys.AuthorsDescription)</MudText>
    <MudTextField @bind-Value="temporaryAddAuthor" Label="Email" Variant="Variant.Outlined" Class="mt-5" Disabled="disableAll" />
    <MudButton Class="mt-3 mb-3" OnClick="AddAuthor" Color="Color.Secondary" Variant="Variant.Filled" Disabled="disableAll">@AppState.Translate(ResourceKeys.SearchUserByEmail)</MudButton>

    @*Current Authors:  *@
    <MudCard Elevation="25" Class="mt-1 pa-2">
        <MudText Typo="Typo.h6">@AppState.Translate(ResourceKeys.Authors)</MudText>
        <MudList>
            @foreach (UserDTO author in petitionDTO.Authors)
            {
                @if (AppState?.User?.Equals(author) == true)
                {
                    <MudListItem >
                        <UserAvatar User="author" /> <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" @onclick="() => RemoveYourselfAsAuthor(author)" Disabled="disableAll" />
                    </MudListItem>
                }
                else
                {
                    <MudListItem>
                        <UserAvatar User="author" />
                    </MudListItem>
                }
            }
        </MudList>
    </MudCard>
    <MudCard Class="mt-1 pa-2">
        <MudText Typo="Typo.h6" Class="mb-5">@AppState.Translate(ResourceKeys.AuthorsReadyToPublish)</MudText>
        <MudList>
            @foreach (UserDTO authorReadyToPublish in petitionDTO.AuthorsReadyToPublish)
            {
                @if (AppState?.User?.Equals(authorReadyToPublish) == true)
                {
                    <MudListItem><MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Primary" /> <UserAvatar User="authorReadyToPublish" /> <MudIconButton Icon="@Icons.Material.Filled.Unpublished" Color="Color.Error" @onclick="Unpublish" Disabled="disableAll" /></MudListItem>
                }
                else
                {
                    <MudListItem><MudIcon Icon="@Icons.Material.Filled.Check" Color="Color.Primary" /> <UserAvatar User="authorReadyToPublish" /> </MudListItem>
                }
            }
            @foreach (UserDTO authorNotReadyToPublish in petitionDTO.Authors.Except(petitionDTO.AuthorsReadyToPublish))
            {
                <MudListItem><MudIcon Icon="@Icons.Material.Filled.Close" Color="Color.Error" /> <UserAvatar User="authorNotReadyToPublish" /></MudListItem>
            }
        </MudList>
    </MudCard>
</MudCard>
<MudCard Class="mt-5 mb-5">
    @*Saving Petition Draft*@
    <MudButton Class="ml-2 mr-2" StartIcon="@Icons.Material.Filled.Save" Variant="Variant.Filled" Color="Color.Info" OnClick="SavePetitionDraft" Disabled="disableAll">@AppState.Translate(ResourceKeys.Save)</MudButton>
    @*Delete Petition Draft - Currently deleting on the list page*@
    @*     <MudButton Class="ml-2 mr-2" StartIcon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error" OnClick="DeleteDraft">@AppState.Translate(ResourceKeys.DeletePetitionDraft)</MudButton>
    *@    @*Publishing Petition *@
    <MudButton Class="ml-2 mr-2" StartIcon="@Icons.Material.Filled.Publish" Variant="Variant.Filled" Color="Color.Primary" OnClick="PublishPetition" Disabled="disableAll">@AppState.Translate(ResourceKeys.Publish)</MudButton>
</MudCard>