@inject BaseAppState AppState
@inject Services Services
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<MudText Typo="Typo.h3">@AppState.Translate(ResourceKeys.ForgotPassword)</MudText>
<MudForm Model="@loginInfo" @bind-IsValid="@success" @bind-Errors="@errors"> 
    <MudPaper Class="pa-4" Elevation="25" Outlined="true">
        <MudTextField T="string" Label="Email" Required="true" RequiredError="@AppState.Translate("Required")" Validation="@(new EmailAddressAttribute() {ErrorMessage = AppState.Translate("Invalid")})" @bind-Value="loginInfo.Email" Variant="Variant.Outlined" />
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" Class="mt-5" OnClick="SendPasswordResetEmail">@AppState.Translate("SendPasswordResetLink")</MudButton>
    </MudPaper>

</MudForm>

@code{
    LoginInfoDTO loginInfo = new();
    private bool success;
    string[] errors = { };

    private async void SendPasswordResetEmail()
    {
        success = false;
        StateHasChanged();
        await Services.PostDataAsync<LoginInfoDTO>(ApiEndPoints.PostSendForgotPasswordEmail, loginInfo);

    }
}