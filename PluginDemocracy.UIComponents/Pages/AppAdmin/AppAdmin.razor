@inject BaseAppState AppState
@inject Services Services

<MudText Align="Align.Center" Typo="Typo.h3" Color="Color.Primary">Plugin Democracy Application Administrator Panel</MudText>
<MudCard Class="ma-3 pa-3">
    <MudText Typo="Typo.h5">Select Community</MudText>
    <MudSelect Disabled="disabledAll" T="ResidentialCommunityDTO" Variant="Variant.Outlined" Label="Community" ValueChanged="@(EventCallback.Factory.Create<ResidentialCommunityDTO>(this, OnSelectCommunityDTOChanged))" Value="SelectedCommunity">
        @foreach (ResidentialCommunityDTO communityDtoOption in CommunitiesDTO ?? new())
        {
            <MudSelectItem Value="@communityDtoOption">@communityDtoOption.Name</MudSelectItem>
        }
    </MudSelect>
</MudCard>

<MudCard Outlined="true" Class="ma-3 pa-3">
    <MudText Typo="Typo.h5">Pending Join Community Requests</MudText>
    <ul>
        @foreach (JoinCommunityRequestDTO joinCommunityRequest in PendingJoinCommunityRequests ?? new())
        {
            <li class="mt-3 mb-3"><UserAvatar User="joinCommunityRequest.UserDTO" Size="Size.Small" /><MudLink Class="mt-1 mb-1 ml-2" Href="@($"{FrontEndPages.JoinCommunityRequests}?requestId={joinCommunityRequest.Id}")">@joinCommunityRequest.UserDTO?.FullName as @($"{(joinCommunityRequest.JoiningAsOwner == true ? "owner" : "resident")}") for home @($"{joinCommunityRequest.HomeDTO?.FullAddress} for community {joinCommunityRequest.CommunityDTO?.FullName}")</MudLink></li>
        }
    </ul>
</MudCard>
<MudCard Class="ma-3 pa-3" Outlined="true">
    <MudText Typo="Typo.h5">Create And Assign a Role</MudText>
    @*Title, description, holder, expirationDate, Powers*@
    <MudTextField Disabled="disabledAll" Label="Role Title" @bind-Value="roleToAdd.Title" Variant="Variant.Outlined" />
    <MudTextField Disabled="disabledAll" Label="Role Description" @bind-Value="roleToAdd.Description" Variant="Variant.Outlined" />
    <MudSelect Disabled="disabledAll" Label="Role Holder" Variant="Variant.Outlined" T="UserDTO" @bind-Value="roleToAdd.Holder">
        @foreach (UserDTO user in usersAvatarsOfCommunity ?? [])
        {
            <MudSelectItem Value="@user">@user.FullName</MudSelectItem>
        }
    </MudSelect>
    <MudText Typo="Typo.h6" Class="mt-1 mb-1">Powers:</MudText>
    <MudCheckBox Disabled="disabledAll" @bind-Value="roleToAdd.Powers.CanEditHomeOwnership" Color="Color.Primary" Label="CanEditHomeOwnership" />
    <MudCheckBox Disabled="disabledAll" @bind-Value="roleToAdd.Powers.CanEditResidency" Color="Color.Primary" Label="CanEditResidency" />
    <MudCheckBox Disabled="disabledAll" @bind-Value="roleToAdd.Powers.CanModifyAccounting" Color="Color.Primary" Label="CanModifyAccounting" />
    <MudButton Disabled="disabledAll" Variant="Variant.Filled" Color="Color.Primary" Class="mt-2 mb-2" OnClick="CreateAndAssignRole">Create and Assign Role</MudButton>
</MudCard>

<MudCard Class="ma-3 pa-3" Outlined="true">
    <MudText Typo="Typo.h5">Unassign and Delete Role</MudText>
    <MudSelect Disabled="disabledAll" Label="Select Role to Delete" Variant="Variant.Outlined" T="RoleDTO" @bind-Value="roleToDelete">
        @foreach (RoleDTO role in SelectedCommunity?.Roles ?? [])
        {
            <MudSelectItem Value="@role">@role.Title</MudSelectItem>
        }
    </MudSelect>
</MudCard>
@if (roleToDelete != null)
{
    <MudCard Class="ma-3 pa-3" Outlined="true">
        <MudText Typo="Typo.h5">Role to Delete Selected: </MudText>
        <MudText>Role Id: @roleToDelete?.Id </MudText>
        <MudText>Title: @roleToDelete?.Title</MudText>
        <MudText>Description: @roleToDelete?.Description</MudText>
        <MudText>Holder FullName: @roleToDelete?.Holder?.FullName</MudText>
        <MudText>Role Expiration Date: @roleToDelete?.ExpirationDate</MudText>
        <MudText>Active: @roleToDelete?.Active</MudText>
        <MudText>Can Edit Home Ownership: @roleToDelete?.Powers.CanEditHomeOwnership</MudText>
        <MudText>Can Edit Residency: @roleToDelete?.Powers.CanEditResidency</MudText>
        <MudText>Can Modify Accounting: @roleToDelete?.Powers.CanModifyAccounting</MudText>
        <MudButton Disabled="disabledAll" Variant="Variant.Filled" Color="Color.Error" Class="mt-2 mb-2" OnClick="UnassignAndDeleteRole">Unassign and Delete Role</MudButton>
    </MudCard>
}


