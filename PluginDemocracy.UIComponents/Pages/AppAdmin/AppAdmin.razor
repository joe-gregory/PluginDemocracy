@inject BaseAppState AppState
@inject Services Services

<MudText Align="Align.Center" Typo="Typo.h3" Color="Color.Primary">Plugin Democracy Application Administrator Panel</MudText>
<MudText Align="Align.Center" Typo="Typo.subtitle1" Class="mt-5 mb-5">With great power comes great responsability</MudText>

@foreach (CommunityDto communityDto in CommunitiesDto ?? [])
{
    <MudText Class="mb-2">@communityDto.FullName</MudText>
}
<MudText>Select Community</MudText>

<MudRadioGroup ValueChanged="@(EventCallback.Factory.Create<CommunityDto>(this, OnSelectCommunityDtoChanged))" Value="SelectedCommunity">
    @foreach (CommunityDto communityDtoOption in CommunitiesDto ?? new())
    {
        <MudRadio Color="Color.Primary" Class="mt-2 mb-2" Value="@communityDtoOption">@(communityDtoOption.Name + ", " + communityDtoOption.Address + ", " + communityDtoOption.Description)</MudRadio>
    }
</MudRadioGroup>

@code
{
    private List<CommunityDto>? CommunitiesDto = [];
    private CommunityDto? SelectedCommunity = null;
    private List<JoinCommunityRequestDto>? JoinCommunityRequests = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //Make sure current user is admin if not, redirect to home page
        bool isUserAdmin = await Services.GetDataAsyncGeneric<bool>(ApiEndPoints.IsCurrentUserAdmin);
        if (!isUserAdmin) Services.NavigateTo(FrontEndPages.Home);
        //Get a list of all the communities
        CommunitiesDto = await Services.GetDataAsyncGeneric<List<CommunityDto>>(ApiEndPoints.AdminGetListOfAllSimpleCommunitiesDtos);
    }
    private async Task OnSelectCommunityDtoChanged(CommunityDto newValue)
    {
        SelectedCommunity = newValue;
        //Now load the requests for the selected community
        if (SelectedCommunity != null)
        {
            //Load JoinCommunityRequests for that community. 

        }
    }
}