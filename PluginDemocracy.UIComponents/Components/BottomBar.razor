@using Microsoft.AspNetCore.Components.Forms
@inject BaseAppState AppState
@inject Services Services
@using PluginDemocracy.API.UrlRegistry

<MudDialog @bind-IsVisible="contributeToCommunityDialogVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Contribute to your Community
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudNavMenu>
            <MudNavLink Href="@FrontEndPages.CreatePetition" Class="mb-1"><MudIcon Icon="@Icons.Material.Filled.Description" /> @AppState.Translate(ResourceKeys.CreatePetition)</MudNavLink>
            <MudNavLink OnClick="OpenCreatePost" Class="mb-1"><MudIcon Icon="@Icons.Material.Filled.PostAdd" /> Post</MudNavLink>
            <MudNavLink Href="@FrontEndPages.ReportABug">@AppState.Translate(ResourceKeys.ReportABug)</MudNavLink>
        </MudNavMenu>
    </DialogContent>
</MudDialog>

@if (AppState.IsLoggedIn)
{
    <MudAppBar Bottom="true" Fixed="true" Color="Color.Primary" Elevation="25">
        <MudSpacer />
        <MudFab Color="Color.Success" StartIcon="@Icons.Material.Filled.Add" OnClick="ContributeToCommunity" Size="Size.Large" />
        <MudSpacer />
    </MudAppBar>
}
<MudDialog @bind-IsVisible="CreatePostDialogVisible">
    <TitleContent>
        <MudText Typo="Typo.h6">
            Create a Post
        </MudText>
    </TitleContent>
    <DialogContent>
        @if (AppState?.User?.Citizenships.Count > 1)
        {
            <MudSelect @bind-Value="MudSelectCommunityId" T="int?" Label="@(AppState.Translate(ResourceKeys.Community))">
                @foreach (ResidentialCommunityDTO community in AppState.User.Citizenships)
                {
                    <MudSelectItem Value="@(community.Id as int?)">@community.Name</MudSelectItem>
                }
            </MudSelect>
        }
        <MudTextField @bind-Value="postText" Required="true" T="string" Label="Description" Variant="Variant.Outlined" AutoGrow="true" Lines="10" />
        @if (fileStreams.Count > 0)
        {
            <MudList>
                @foreach (var file in fileStreams)
                {
                    <MudListItem>
                        <MudImage Fluid="true" Src=@($"data:{file.Value.ContentType};base64,{file.Value.Base64Thumbnail}") />
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(() => RemoveFile(file.Key))" />
                    </MudListItem>
                }
            </MudList>
        }
        <MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept=".png, .jpg, .jpeg" FilesChanged="PostFiledAdded">
            <ButtonTemplate>
                <MudFab Disabled="@isImageUploadLoading" HtmlTag="label" Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Image" Label="Load Pictures" for="@context.Id"> Upload images</MudFab>
            </ButtonTemplate>
        </MudFileUpload>
        @if (isImageUploadLoading)
        {
            <MudProgressLinear Class="mt-1" Indeterminate="true" Color="Color.Secondary" />
        }
    </DialogContent>
    <DialogActions>
        <MudButton Disabled="createPostButtonDisabled" Color="Color.Primary" Variant="Variant.Filled" OnClick="CreatePost">Create Post</MudButton>
    </DialogActions>
</MudDialog>