<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutCommunity" xml:space="preserve">
    <value>About Community</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Accounting" xml:space="preserve">
    <value>Accounting</value>
  </data>
  <data name="ActionRequested" xml:space="preserve">
    <value>Action Requested</value>
  </data>
  <data name="ActionRequestedDescription" xml:space="preserve">
    <value>A clear statement of what you want the board to do as a result of the petition</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddHomesAutomaticallyDescription" xml:space="preserve">
    <value>This section helps you add multitple homes quickly so you don't have to add a home one by one. If you need to, you can add multiple homes and then edit the individual information of each home below. </value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="AreYouJoiningAsAHomeOwnerOrResidentDialogContent" xml:space="preserve">
    <value>Select whether you are joining as a home owner or a resident. If joining as a home owner, you will need to specify your ownership percentage. If there are already homeowners registered, the total value of ownership over the house cannot exceed 100%. In communities where the voting power is in home owners, your percentage of ownership over the home will be reflected in equal percentage on your home's vote on proposals. </value>
  </data>
  <data name="ArticleBodyUIInputDescription" xml:space="preserve">
    <value>This is the body of the Article. This is the actual Article/Law. </value>
  </data>
  <data name="ArticleBodyUIInputLabel" xml:space="preserve">
    <value>Article's body</value>
  </data>
  <data name="ArticleExpirationDateUIInputDescription" xml:space="preserve">
    <value>If this is set, the Article will expire and the given date and it will be removed from the constitution</value>
  </data>
  <data name="ArticleExpirationDateUIInputLabel" xml:space="preserve">
    <value>Article's expiration date</value>
  </data>
  <data name="ArticleNumberDescription" xml:space="preserve">
    <value>This is to select the number that the article will take in the constitution. If no number is selected, the Article is added as the newest number in the constitution. If a number is selected and the proposal passes, the Article will have this number and previous Articles with this number or higher will be pushed one number up. </value>
  </data>
  <data name="ArticleNumberLabel" xml:space="preserve">
    <value>Article Number</value>
  </data>
  <data name="ArticleTitleUIInputDescription" xml:space="preserve">
    <value>This is the title of the Article as it will show up on the constitution for this community</value>
  </data>
  <data name="ArticleTitleUIInputLabel" xml:space="preserve">
    <value>Article's Title</value>
  </data>
  <data name="ArticleUIContainerDescription" xml:space="preserve">
    <value>This is an article that is stored in the constitution. It reflects the rules and regulations that the community follow. They are determine by popular vote in the community. If a number is chosen for the article, it will be placed as that number in the constitution and all the other articles will be pushed one number up. </value>
  </data>
  <data name="ArticleUIContainerTitle" xml:space="preserve">
    <value>Constitution Article</value>
  </data>
  <data name="Authors" xml:space="preserve">
    <value>Authors</value>
  </data>
  <data name="AuthorsDescription" xml:space="preserve">
    <value>If you are going to add co-authors to this petition, please add them here by the email address they use for the Plugin Democracy application. Please note, if there is more than one author associated with the petition, each single author needs to publish the petition for the petition to publish. If one of the authors selected publish and another author makes changes to the petition, the author will that selected publish will need to select publish again. The petition still needs to be saved for the author to be added to the petition after searching.</value>
  </data>
  <data name="AuthorsReadyToPublish" xml:space="preserve">
    <value>Authors ready to publish</value>
  </data>
  <data name="AvailableOwnership" xml:space="preserve">
    <value>Available ownership</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChangePassword" xml:space="preserve">
    <value>Change Password</value>
  </data>
  <data name="Communities" xml:space="preserve">
    <value>Communities</value>
  </data>
  <data name="Community" xml:space="preserve">
    <value>Community</value>
  </data>
  <data name="Constitution" xml:space="preserve">
    <value>Constitution</value>
  </data>
  <data name="CountryCode" xml:space="preserve">
    <value>Country code</value>
  </data>
  <data name="CreateArticleDictamenDescription" xml:space="preserve">
    <value>This type of Dictamen creates a new article or law for this community. The article or law specifies behavior by which citizens need to abide by. It outlines the expectations and rules that govern community interactions and ensures that all members understand their responsibilities. </value>
  </data>
  <data name="CreateArticleDictamenTitle" xml:space="preserve">
    <value>Create a New Article for Constitution</value>
  </data>
  <data name="CreatePetition" xml:space="preserve">
    <value>Create a Petition</value>
  </data>
  <data name="CreatePetitionDescription" xml:space="preserve">
    <value>A petition is a tool that allows homeowners like you to initiate changes or actions within our community. Whether you want to propose a new rule, request the addition of community amenities, use community funds for a particular project, or call for the removal of a board member, a petition is the process by which you can achieve this. You first create a petition by filling out all the required fields. You can add other authors so they can also edit the petition. Once you are satisfied with the petition, you can publish it. When the petition is published, it becomes publicly available and other neighbors can e-sign the petition. However, don't forget to share it as much as possible. It will also show up on your community's feed. Once you've gathered enough signatures for your petition, you can send it to the board members of your community. If the board members use the platform, the petition will be automatically sent to them with all the signatures. A petition passes if it has the majority of homeowners' signatures according to the HOA’s bylaws.</value>
  </data>
  <data name="CreateProposal" xml:space="preserve">
    <value>Create Proposal</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DateOfBirth" xml:space="preserve">
    <value>Date of birth</value>
  </data>
  <data name="DeadlineForResponse" xml:space="preserve">
    <value>Deadline for response</value>
  </data>
  <data name="DeadlineForResponseDescription" xml:space="preserve">
    <value>(Optional) A suggested or required timeline for when the petition should be reviewed and responded to by the HOA board.</value>
  </data>
  <data name="DeletePetitionDraft" xml:space="preserve">
    <value>Delete Petition Draft</value>
  </data>
  <data name="DeletePost" xml:space="preserve">
    <value>Delete Post</value>
  </data>
  <data name="DeletePostCannotBeUndone" xml:space="preserve">
    <value>Once deleted it cannot be undone</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="DialogDeletePetitionDraftMultipleAuthors" xml:space="preserve">
    <value>This petition draft has multiple authors. You are not able to delete it but you can remove yourself as one of the authors. Do you want to remove yourself as an author?</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="ErrorMessageJoinHomeWrongPercentage" xml:space="preserve">
    <value>Ownership percentage must be between 1 and 100 and can't be bigger that what is available.</value>
  </data>
  <data name="Feed" xml:space="preserve">
    <value>Feed</value>
  </data>
  <data name="FilesReadyToUpload" xml:space="preserve">
    <value>Files ready to upload: (you need to save the document to upload them)</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="ForgotPassword?" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="HomeOwner" xml:space="preserve">
    <value>Home owner</value>
  </data>
  <data name="HomeOwners" xml:space="preserve">
    <value>Home owners</value>
  </data>
  <data name="Homes" xml:space="preserve">
    <value>Homes</value>
  </data>
  <data name="HomesEndingNumber" xml:space="preserve">
    <value>Homes's ending address number</value>
  </data>
  <data name="HomesStartingNumber" xml:space="preserve">
    <value>Homes' starting address number</value>
  </data>
  <data name="InternalAddress" xml:space="preserve">
    <value>Internal address</value>
  </data>
  <data name="Invalid" xml:space="preserve">
    <value>Invalid</value>
  </data>
  <data name="Join" xml:space="preserve">
    <value>Join</value>
  </data>
  <data name="JoinAHome" xml:space="preserve">
    <value>Join a Home</value>
  </data>
  <data name="JoinAnExistingCommunity" xml:space="preserve">
    <value>Join an existing community</value>
  </data>
  <data name="JoinCommunity" xml:space="preserve">
    <value>Join a community</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LatestEdit" xml:space="preserve">
    <value>Latest Edit</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle name</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewPasswordTitle" xml:space="preserve">
    <value>Input New Password</value>
  </data>
  <data name="Notifications" xml:space="preserve">
    <value>Notifications</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="OfficialCurrency" xml:space="preserve">
    <value>Official currency</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordsDoNotMatch" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="Percentage" xml:space="preserve">
    <value>Percentage</value>
  </data>
  <data name="PetitionDescription" xml:space="preserve">
    <value>A detailed description of the issue, including why it is important and what changes or actions are being requested.</value>
  </data>
  <data name="PetitionDrafts" xml:space="preserve">
    <value>Petition Drafts</value>
  </data>
  <data name="PetitionSavedSuccessfully" xml:space="preserve">
    <value>The petition was saved successfully</value>
  </data>
  <data name="PetitionSavedUnsuccessfully" xml:space="preserve">
    <value>There was an error saving the petition</value>
  </data>
  <data name="PetitionTitle" xml:space="preserve">
    <value>A clear and concise title that summarizes the purpose of the petition</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PleaseConfirmEmailForFullFunctionality" xml:space="preserve">
    <value>Please confirm your email for full functionality</value>
  </data>
  <data name="PleaseSelectAFile" xml:space="preserve">
    <value>Please select a file</value>
  </data>
  <data name="PluginDemocracy" xml:space="preserve">
    <value>Plugin Democracy</value>
  </data>
  <data name="PrimaryLanguageAndCulture" xml:space="preserve">
    <value>Primary language and culture</value>
  </data>
  <data name="Projects" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Proposals" xml:space="preserve">
    <value>Proposals</value>
  </data>
  <data name="Publish" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="Read" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="RedFlags" xml:space="preserve">
    <value>Red Flags</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterANewCommunity" xml:space="preserve">
    <value>Register a new community</value>
  </data>
  <data name="RegisterCommunity" xml:space="preserve">
    <value>Register a community</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required</value>
  </data>
  <data name="Resident" xml:space="preserve">
    <value>Resident</value>
  </data>
  <data name="Residents" xml:space="preserve">
    <value>Residents</value>
  </data>
  <data name="Roles" xml:space="preserve">
    <value>Roles</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SearchUserByEmail" xml:space="preserve">
    <value>Search user by email</value>
  </data>
  <data name="SecondLastName" xml:space="preserve">
    <value>Second last name</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectAllOfficialLanguages" xml:space="preserve">
    <value>Select all official languages</value>
  </data>
  <data name="SelectCommunityFromDropDown" xml:space="preserve">
    <value>Please select an existing community from the dropdown menu</value>
  </data>
  <data name="SelectCulture" xml:space="preserve">
    <value>Select culture</value>
  </data>
  <data name="SelectHomeDescriptionInJoinCommunity" xml:space="preserve">
    <value>This is the list of homes for this community. Please select which home you belong to as either a resident or a homeowner. Select the appropiate option. After selecting, and posting this form, a request will be sent. Your request will be approved depending on your community's bylaws. This is done to prevent individuals from claiming they are a part of the community when they are not. Community members can change their community's member verification process by making a proposal and passing it. If your community has not voted on a verification process for members, then the default behavior is that the community's administrator (community's president) does the verification process or an application administrator. </value>
  </data>
  <data name="SendPasswordResetLink" xml:space="preserve">
    <value>Send Password Reset Link</value>
  </data>
  <data name="SendRequest" xml:space="preserve">
    <value>Send Request</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>Spanish</value>
  </data>
  <data name="SuccessAuthorRemoved" xml:space="preserve">
    <value>You have been removed as an author. Don't forget to save so it takes effect!</value>
  </data>
  <data name="SupportingArguments" xml:space="preserve">
    <value>Supporting Arguments</value>
  </data>
  <data name="SupportingArgumentsDescription" xml:space="preserve">
    <value>Points that support the petition's request, including any relevant facts, data, or testimonials.</value>
  </data>
  <data name="SupportingDocuments" xml:space="preserve">
    <value>Supporting Documents</value>
  </data>
  <data name="SupportingDocumentsDescription" xml:space="preserve">
    <value>Supporting documents provide additional information and evidence to strengthen your petition. These documents can include letters of endorsement, photographs, reports, meeting minutes, financial statements, or any other relevant materials that help clarify and justify the petition’s purpose.</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UpdateAccountInformation" xml:space="preserve">
    <value>Update Account Information</value>
  </data>
  <data name="UpdateProfilePicture" xml:space="preserve">
    <value>Update Profile Picture</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="UploadedFiles" xml:space="preserve">
    <value>Uploaded files</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="WarningRemoveYourselfAsAuthor" xml:space="preserve">
    <value>If you remove yourself as author, another author will need to add you again to the petition. If you are the last author in the petition, the petition draft will be eliminated. Don't forget to save changes so this takes effect. </value>
  </data>
  <data name="YouHaveNoCommunities" xml:space="preserve">
    <value>You have not joined any communities. Join an existing community or register a new community. </value>
  </data>
</root>